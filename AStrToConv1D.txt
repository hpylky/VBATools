Private Const XOR_KEY As String = ""

Public Function EncryptStrToSEnc(SrcStr As String) As String
    Dim bytes() As Byte
    Dim xBytes() As Byte

    bytes = StrConv(SrcStr, vbFromUnicode)
    xBytes = xorBytes(bytes, XOR_KEY)
    EncryptStrToSEnc = EncodeBase64(xBytes)
End Function

Public Function DecryptSEncToStr(SrcStr As String) As String
    Dim bytes() As Byte
    Dim xBytes() As Byte
    
    bytes = DecodeBase64(SrcStr)
    xBytes = xorBytes(bytes, XOR_KEY)
    DecryptSEncToStr = StrConv(xBytes, vbUnicode)
End Function

Private Function EncodeBase64(bytes() As Byte) As String
    Dim objXML As Object
    Dim objNode As Object
    
    Set objXML = CreateObject("MSXML2.DOMDocument")
    Set objNode = objXML.createElement("b64")
    objNode.DataType = "bin.base64"
    objNode.nodeTypedValue = bytes
    EncodeBase64 = Replace(objNode.text, vbLf, "") ' 改行除去
End Function

Private Function DecodeBase64(base64Str As String) As Byte()
    Dim objXML As Object
    Dim objNode As Object
    
    Set objXML = CreateObject("MSXML2.DOMDocument")
    Set objNode = objXML.createElement("b64")
    objNode.DataType = "bin.base64"
    objNode.text = base64Str
    DecodeBase64 = objNode.nodeTypedValue
End Function

Private Function xorBytes(data() As Byte, key As String) As Byte()
    Dim kLen As Long
    Dim Result() As Byte
    Dim i As Long
    
    kLen = Len(key)
    ReDim Result(LBound(data) To UBound(data))
    For i = LBound(data) To UBound(data)
        Result(i) = data(i) Xor Asc(mid$(key, (i Mod kLen) + 1, 1))
    Next
    xorBytes = Result
End Function
