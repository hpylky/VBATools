' 文字列をクリップボードにコピー
' TStr  : コピーする文字列
'
Sub ClipBdPutText(TStr As String)
    With CreateObject("Forms.TextBox.1")
    .MultiLine = True
    .text = TStr
    .SelStart = 0
    .SelLength = .TextLength
    .Copy
    End With
End Sub

' クリップボードから文字列を取得
' TData  : 取得した文字列 (戻り値)
' 戻り値 : True  = 取得成功
'          False = 取得失敗
' 参照設定 : Microsoft Forms 2.0 Object Library
' 補足 : Excel以外(Access等でも使用可能)
'
Public Function ClipBdGetText(ByRef TData As String) As Boolean
    On Error GoTo EndProc
    Dim CB As DataObject
    
    TData = ""  ' TData初期化
    Set CB = New DataObject
    With CB
    .GetFromClipboard
    If .GetFormat(1) Then    ' 1 = vbCFText
        TData = .GetText
        ClipBdGetText = True
    End If
    End With
EndProc:
    Set CB = Nothing
End Function

' 区切りコメント作成
' DevName : 分割名
' 戻り値  : 作成したコメント
' Ex. 「＊＊関係」に対して、下記区切りコメントを作成
' '---------+---------+---------+---------+---------+---------+---------+
' ' ＊＊関係
' '---------+---------+---------+---------+---------+---------+---------+
'
Public Function 区切りコメント作成(DevName As String) As String
    Dim s As String
    
    s = "'" & StringX("---------+", 7) & vbCrLf ' 区切り線作成
    区切りコメント作成 = s & "' " & DevName & vbCrLf & _
                           s & "'" & vbCrLf
End Function

' 区切りコメント作成
'
Public Sub r区切りコメント作成(Optional ByVal control As IRibbonControl)
    Dim DivName As String
    
    ClipBdGetText DivName  ' クリップボードから区切り名を取得
    ClipBdPutText = 区切りコメント作成(DivName)
    MsgBox "クリップボードに区切りコメントをコピーしました。"
End Sub

' String関数の拡張関数(文字列も対応)
' Num    : 繰り返し数
' Str    : 対象文字列
' 戻り値 : StrをNum回繰り返した文字列
' Ex. Num = 3, Str = "abc"の時
'     戻り値 = "abcabcabc"
'
Public Function StringX(Num As Long, Str As String) As String
    Dim Output As String
    Dim i As Long

    If Num <= 0 Then Exit Function  ' 0以下は""を返す
    For i = 1 To Num
        Output = Output & Str
    Next i
    StringX = Output
End Function

' GitHubからファイルをダウンロード
' fileURL    : GitHubのrawファイルURL（最後の/も付けること）
' savePath   : 保存先パス (最後の\も付けること)
' FName      : ファイル名
' HttpStatus : HttpStatus番号 (省略可)
'              200 = OK, 404 = NotFound, 500 = InternalServerErrorなど
' ErrNum     : Err.Numberの値 (省略可)
' 戻り値     : True  = 正常終了
'              False = エラー発生 (詳細はHttpStatus, ErrNumを確認)
' 参照設定 : Microsoft XML, v6.0 (XMLHTTP60)
' 参照設定 : Microsoft ActiveX Data Objects Library (Stream)
' 補足 : fileURLの記載例
'   "https://raw.githubusercontent.com/user名/rep名/main/"
'
Public Function FileDLFmGitHub(fileURL As String, _
        savePath As String, _
        FName As String, _
        Optional ByRef HttpStatus As Long, _
        Optional ByRef ErrNum As Long) As Boolean
#If DEBUGMode Then
    ' 前処理 (引数チェック)
    If Right(fileURL, 1) <> "/" Then
        MsgBox "fileURLの末尾が/ではありません。"
        Stop: End
    End If
    If Right(savePath, 1) <> "\" Then
        MsgBox "savePathの末尾が\ではありません。"
        Stop: End
    End If
#End If
    ' メイン処理
    On Error GoTo ErrProc
    Dim http As MSXML2.XMLHTTP60
    Dim Stream As ADODB.Stream
    
    HttpStatus = 0
    ErrNum = 0
    
    ' HTTPリクエストオブジェクト作成
    Set http = New MSXML2.XMLHTTP60
    http.Open "GET", fileURL & FName, False
    http.Send
    
    HttpStatus = http.Status
    If HttpStatus <> 200 Then GoTo EndProc
        
    ' ADODB.Streamで保存
    Set Stream = New ADODB.Stream
    Stream.Type = 1 ' バイナリ
    Stream.Open
    Stream.Write http.responseBody
    Stream.SaveToFile savePath & FName, 2 ' 2=上書き保存
    FileDLFmGitHub = True   ' ダウンロード成功

EndProc:
    If Not Stream Is Nothing Then
        If Stream.State = 1 Then Stream.Close
        Set Stream = Nothing
    End If
    If Not http Is Nothing Then http.abort  'レスポンス中のキャンセル時処理
    Set http = Nothing
    Exit Function

ErrProc:
    ErrNum = Err.Number
    GoTo EndProc
End Function
